{"ast":null,"code":"var _jsxFileName = \"/Users/andresgonzalez/Desktop/B2B-main-website/src/components/MainSite/StoreForm/StoreForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./StoreForm.css\";\nimport { get, useForm } from 'react-hook-form';\nimport useCustomers from \"../../../hooks/useCustomers\";\nimport { Button, Form } from \"react-bootstrap\";\nimport useQuickBlox from \"../../../hooks/useQuickBlox\";\nimport CallButton from \"./CallButton\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StoreForm = ({\n  match,\n  history\n}) => {\n  _s();\n\n  var _company$branchs3, _company$branchs3$fil;\n\n  const storedLink = get(match, 'params.storedLink', null);\n  const {\n    initQuickBlox,\n    createUserSession,\n    getRepresentativesUsers,\n    connectChatServer,\n    makeVideoCall,\n    acceptListener,\n    rejectListener,\n    remoteListener,\n    stopCallListener,\n    userNotAnswerListener,\n    sessionConnectionStateChangedListener,\n    callStatsReport,\n    callStatus,\n    endCall,\n    mySession,\n    noAnswer\n  } = useQuickBlox();\n  const [defaultOption, setDefaultOption] = useState(undefined);\n  const [branch, setBranch] = useState(undefined);\n  const [callEnded, setCallEnded] = useState(false);\n  const [callstarted, setCallstarted] = useState(false);\n  const [callType, setCallType] = useState();\n  const [emailBranch, setEmailBranch] = useState();\n  const [index, setIndex] = useState(0);\n  const [QBUsers, setQBUsers] = useState([]);\n  const {\n    getCompanyByURL,\n    company,\n    createCustomer,\n    getRepresentativesByBranch,\n    getRepresentatives\n  } = useCustomers();\n  const {\n    register,\n    handleSubmit,\n    getValues\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      firstName: undefined,\n      lastName: undefined,\n      email: undefined,\n      branch: undefined\n    }\n  });\n  const [question, setQuestion] = useState(false);\n  useEffect(() => {\n    initQuickBlox();\n    getCompanyByURL(storedLink); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(async () => {\n    console.log(\"INDEXXXXXXXXX\", index);\n\n    if (callstarted) {\n      if (index < QBUsers.length) {\n        await makeVideoCall(QBUsers[index], callType);\n      } else {\n        finishCall();\n      }\n    }\n  }, [index]);\n\n  const finishCall = () => {\n    endCall(mySession);\n    setCallEnded(true);\n  };\n\n  useEffect(() => {\n    if (branch) {\n      var _company$branchs;\n\n      if (((_company$branchs = company.branchs) === null || _company$branchs === void 0 ? void 0 : _company$branchs.length) === 1) {\n        // getRepresentativesByBranch(branch);\n        setEmailBranch(branch.email);\n      } else {\n        // getRepresentativesByBranch(branch);\n        const branchRetrieved = company.branchs.find(value => value._id === branch);\n        setEmailBranch(branchRetrieved.email);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [branch]);\n\n  const onChange = event => {\n    switch (event.target.name) {\n      case 'branch':\n        setBranch(event.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onSubmit = async data => {\n    await createCustomer({\n      name: `${data.firstName} ${data.lastName}`,\n      email: data.email,\n      type: \"CUSTOMER\"\n    });\n    const currentUser = await createUserSession(data.email, `${data.firstName} ${data.lastName}`);\n    const reps = await getRepresentativesByBranch(branch); // const reps = getRepresentatives()\n\n    const representativesFromQB = await getRepresentativesUsers(reps);\n    console.log(\"=========== reps\", representativesFromQB);\n    setQBUsers(representativesFromQB);\n    await connectChatServer(currentUser); // Block of listeners\n\n    await stopCallListener(() => {\n      // finishCall()\n      setCallEnded(true);\n    });\n    await userNotAnswerListener(async () => {\n      await setIndex(index + 1);\n    });\n    await sessionConnectionStateChangedListener();\n    await callStatsReport();\n    await remoteListener(); // Video call\n\n    if (representativesFromQB.length > 0) {\n      setCallstarted(true);\n      await makeVideoCall(representativesFromQB[index], callType);\n    } else {\n      alert(\"No representative is available at the moment.\");\n      return;\n    }\n\n    await acceptListener();\n    await rejectListener(async () => {\n      await setIndex(index + 1);\n    });\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  const showStatusCall = () => {\n    if (mySession && noAnswer) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Su llamada no fue contestada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (mySession && !callStatus) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Llamando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (mySession && callStatus === 1) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Conectado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  useEffect(() => {\n    if (company) {\n      var _company$branchs2;\n\n      if (((_company$branchs2 = company.branchs) === null || _company$branchs2 === void 0 ? void 0 : _company$branchs2.length) === 1) {\n        setDefaultOption(company.branchs[0]);\n        setBranch(company.branchs[0]._id);\n      } else {\n        if (company === null || company === void 0 ? void 0 : company.branchs) {\n          setDefaultOption(company === null || company === void 0 ? void 0 : company.branchs[0]);\n          setBranch(company === null || company === void 0 ? void 0 : company.branchs[0]._id);\n        }\n      }\n    }\n  }, [company]);\n\n  if (callEnded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-form\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gracias por llamar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n  const handleQuestion = () => {\n    setQuestion(true);\n  };\n\n  const closeQuestion = () => {\n    setQuestion(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-div\",\n      children: company && /*#__PURE__*/_jsxDEV(Form, {\n        md: \"6\",\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"company-name\",\n          children: company.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desc-form\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"desc-paragraph\",\n            children: \"Por favor llena el siguiente formulario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            \"aria-label\": \"First name\",\n            placeholder: \"Nombre\",\n            ...register('firstName', {\n              required: true\n            }),\n            onChange: onChange,\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            \"aria-label\": \"Last name\",\n            placeholder: \"Apellido\",\n            ...register('lastName', {\n              required: true\n            }),\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3 input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-input\",\n            placeholder: \"Correo Electr\\xF3nico\",\n            ...register('email', {\n              required: true\n            }),\n            \"aria-label\": \"Email\",\n            \"aria-describedby\": \"basic-addon1\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"sucursal\",\n            className: \"sucursal-label\",\n            children: \"Escoje sucursal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", { ...register('branch'),\n            className: \"browser-default mdb-select selector-sucursal\",\n            defaultValue: defaultOption,\n            onChange: onChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DEFAULT\",\n              disabled: true,\n              children: \"Sucursal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), (_company$branchs3 = company.branchs) === null || _company$branchs3 === void 0 ? void 0 : (_company$branchs3$fil = _company$branchs3.filter((branch, index) => branch.isActive)) === null || _company$branchs3$fil === void 0 ? void 0 : _company$branchs3$fil.map((branch, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: branch._id,\n              children: branch.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 118\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-call-button\",\n          children: [/*#__PURE__*/_jsxDEV(CallButton, {\n            name: \"Pregunta\",\n            image: \"\\u2754\",\n            onClick: handleQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CallButton, {\n            name: \"Video\",\n            image: \"\\uD83D\\uDCF9\",\n            type: \"submit\",\n            disabled: mySession,\n            onClick: () => setCallType('VIDEO')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CallButton, {\n            name: \"Voz\",\n            image: \"\\uD83D\\uDCDE\",\n            type: \"submit\",\n            disabled: mySession,\n            onClick: () => setCallType('AUDIO')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CallButton, {\n            name: \"Correo\",\n            image: \"\\uD83D\\uDCE8\",\n            email: emailBranch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: question && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"questionLabel\",\n          children: \"Escribe tu pregunta y te respondemos con un corto video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"ej. \\xBFTienen sof\\xE1s con cojineria de cuero?\",\n          className: \"questionInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sentQuestion\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"closeQuestion\",\n          onClick: closeQuestion,\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), mySession && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group input-container\",\n        children: showStatusCall()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qb-video\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"localVideo\",\n            className: \"qb-video_source\",\n            autoPlay: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qb-video\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"mainVideo\",\n            className: \"frames__main_v qb-video_source\",\n            autoPlay: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group input-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          className: \"hangout-button\",\n          onClick: () => finishCall(),\n          children: \"Terminar llamada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StoreForm, \"puBBnAoHgbsCTN+EDYYCkgi3Lco=\", false, function () {\n  return [useQuickBlox, useCustomers, useForm];\n});\n\n_c = StoreForm;\nexport default StoreForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreForm\");","map":{"version":3,"sources":["/Users/andresgonzalez/Desktop/B2B-main-website/src/components/MainSite/StoreForm/StoreForm.js"],"names":["React","useEffect","useState","get","useForm","useCustomers","Button","Form","useQuickBlox","CallButton","Link","StoreForm","match","history","storedLink","initQuickBlox","createUserSession","getRepresentativesUsers","connectChatServer","makeVideoCall","acceptListener","rejectListener","remoteListener","stopCallListener","userNotAnswerListener","sessionConnectionStateChangedListener","callStatsReport","callStatus","endCall","mySession","noAnswer","defaultOption","setDefaultOption","undefined","branch","setBranch","callEnded","setCallEnded","callstarted","setCallstarted","callType","setCallType","emailBranch","setEmailBranch","index","setIndex","QBUsers","setQBUsers","getCompanyByURL","company","createCustomer","getRepresentativesByBranch","getRepresentatives","register","handleSubmit","getValues","mode","defaultValues","firstName","lastName","email","question","setQuestion","console","log","length","finishCall","branchs","branchRetrieved","find","value","_id","onChange","event","target","name","onSubmit","data","type","currentUser","reps","representativesFromQB","alert","onError","errors","e","showStatusCall","handleQuestion","closeQuestion","required","filter","isActive","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./StoreForm.css\";\nimport { get, useForm } from 'react-hook-form';\nimport useCustomers from \"../../../hooks/useCustomers\";\nimport { Button, Form } from \"react-bootstrap\";\nimport useQuickBlox from \"../../../hooks/useQuickBlox\";\nimport CallButton from \"./CallButton\"\nimport { Link } from \"react-router-dom\";\n\n\nconst StoreForm = ({ match, history }) => {\n    const storedLink = get(match, 'params.storedLink', null);\n    const {\n        initQuickBlox,\n        createUserSession,\n        getRepresentativesUsers,\n        connectChatServer,\n        makeVideoCall,\n        acceptListener,\n        rejectListener,\n        remoteListener,\n        stopCallListener,\n        userNotAnswerListener,\n        sessionConnectionStateChangedListener,\n        callStatsReport,\n        callStatus,\n        endCall,\n        mySession,\n        noAnswer\n    } = useQuickBlox();\n    const [defaultOption, setDefaultOption] = useState(undefined);\n    const [branch, setBranch] = useState(undefined);\n    const [callEnded, setCallEnded] = useState(false);\n    const [callstarted, setCallstarted] = useState(false);\n    const [callType, setCallType] = useState();\n    const [emailBranch, setEmailBranch] = useState();\n    const [index, setIndex] = useState(0)\n    const [QBUsers, setQBUsers] = useState([])\n    const { getCompanyByURL, company, createCustomer, getRepresentativesByBranch, getRepresentatives } = useCustomers();\n    const { register, handleSubmit, getValues } = useForm({\n        mode: 'onChange',\n        defaultValues: {\n            firstName: undefined,\n            lastName: undefined,\n            email: undefined,\n            branch: undefined\n        },\n    });\n\n    const [question, setQuestion] = useState(false);\n\n    useEffect(() => {\n        initQuickBlox();\n        getCompanyByURL(storedLink);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(async () => {\n        console.log(\"INDEXXXXXXXXX\", index)\n        if (callstarted) {\n            if (index < QBUsers.length) {\n                await makeVideoCall(QBUsers[index], callType);\n            } else {\n                finishCall()\n            }\n        }\n    }, [index]);\n\n    const finishCall = () => {\n        endCall(mySession);\n        setCallEnded(true);\n    }\n\n    useEffect(() => {\n        if (branch) {\n            if (company.branchs?.length === 1) {\n                // getRepresentativesByBranch(branch);\n                setEmailBranch(branch.email);\n            } else {\n                // getRepresentativesByBranch(branch);\n                const branchRetrieved = company.branchs.find((value) => value._id === branch);\n                setEmailBranch(branchRetrieved.email);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [branch]);\n\n    const onChange = (event) => {\n        switch (event.target.name) {\n            case 'branch':\n                setBranch(event.target.value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const onSubmit = async (data) => {\n        await createCustomer({ name: `${data.firstName} ${data.lastName}`, email: data.email, type: \"CUSTOMER\" });\n        const currentUser = await createUserSession(data.email, `${data.firstName} ${data.lastName}`);\n        const reps = await getRepresentativesByBranch(branch)\n        // const reps = getRepresentatives()\n        const representativesFromQB = await getRepresentativesUsers(reps);\n        console.log(\"=========== reps\", representativesFromQB)\n        setQBUsers(representativesFromQB)\n        await connectChatServer(currentUser);\n\n        // Block of listeners\n        await stopCallListener(() => {\n            // finishCall()\n            setCallEnded(true);\n        });\n        await userNotAnswerListener(async () => {\n            await setIndex(index + 1)\n        });\n        await sessionConnectionStateChangedListener();\n        await callStatsReport();\n        await remoteListener();\n\n        // Video call\n        if (representativesFromQB.length > 0) {\n            setCallstarted(true)\n            await makeVideoCall(representativesFromQB[index], callType);\n        } else {\n            alert(\"No representative is available at the moment.\")\n            return\n        }\n        await acceptListener();\n        await rejectListener(async () => {\n            await setIndex(index + 1)\n        });\n    }\n    const onError = (errors, e) => console.log(errors, e);\n\n    const showStatusCall = () => {\n        if (mySession && noAnswer) {\n            return <h3>Su llamada no fue contestada.</h3>\n        }\n        if (mySession && !callStatus) {\n            return <h3>Llamando...</h3>\n        }\n        if (mySession && callStatus === 1) {\n            return <h3>Conectado.</h3>\n        }\n    }\n\n    useEffect(() => {\n        if (company) {\n            if (company.branchs?.length === 1) {\n                setDefaultOption(company.branchs[0]);\n                setBranch(company.branchs[0]._id);\n            } else {\n                if (company?.branchs) {\n                    setDefaultOption(company?.branchs[0]);\n                    setBranch(company?.branchs[0]._id)\n                }\n            }\n        }\n    }, [company]);\n\n    if (callEnded) {\n        return (\n            <div className=\"container-form\">\n                <h1>Gracias por llamar</h1>\n            </div>\n        )\n    }\n\n    const handleQuestion = () => {\n        setQuestion(true)\n    }\n\n    const closeQuestion = () => {\n        setQuestion(false)\n    }\n\n    return (\n        <div className=\"container-form\">\n            <div className=\"form-div\">\n                {company && (\n                    <Form md=\"6\" onSubmit={handleSubmit(onSubmit, onError)}>\n                        <h1 className=\"company-name\">{company.name}</h1>\n                        <div className=\"desc-form\">\n                            <p className=\"desc-paragraph\">Por favor llena el siguiente formulario</p>\n                        </div>\n                        <div className=\"input-group input-container\">\n                            <input type=\"text\" aria-label=\"First name\" placeholder=\"Nombre\" {...register('firstName', { required: true })} onChange={onChange} className=\"form-input\" required />\n                        </div>\n                        <div className=\"input-group input-container\">\n                            <input type=\"text\" aria-label=\"Last name\" placeholder=\"Apellido\" {...register('lastName', { required: true })} className=\"form-input\" />\n                        </div>\n                        <div className=\"input-group mb-3 input-container\">\n                            <input type=\"text\" className=\"form-input\" placeholder=\"Correo Electrónico\" {...register('email', { required: true })} aria-label=\"Email\"\n                                aria-describedby=\"basic-addon1\" required />\n                        </div>\n                        <div className=\"input-group input-container\">\n                            <label for=\"sucursal\" className=\"sucursal-label\">Escoje sucursal</label>\n                        </div>\n                        <div className=\"input-group input-container\">\n                            <select {...register('branch')} className=\"browser-default mdb-select selector-sucursal\" defaultValue={defaultOption} onChange={onChange}>\n                                <option value=\"DEFAULT\" disabled>Sucursal</option>\n                                {company.branchs?.filter((branch, index) => branch.isActive)?.map((branch, index) => <option key={index} value={branch._id}>{branch.name}</option>\n                                )}\n                            </select>\n                        </div>\n\n                        <div className=\"div-call-button\">\n                            <CallButton\n                                name=\"Pregunta\"\n                                image=\"❔\"\n                                onClick={handleQuestion}\n                            />\n                            <CallButton\n                                name=\"Video\"\n                                image=\"📹\"\n                                type=\"submit\"\n                                disabled={mySession}\n                                onClick={() => setCallType('VIDEO')}\n                            />\n                            <CallButton\n                                name=\"Voz\"\n                                image=\"📞\"\n                                type=\"submit\"\n                                disabled={mySession}\n                                onClick={() => setCallType('AUDIO')}\n                            />\n                            <CallButton\n                                name=\"Correo\"\n                                image=\"📨\"\n                                email={emailBranch}\n                            />\n                        </div>\n                    </Form>\n                )}\n            </div>\n            <div>\n                {\n                    question && (\n                        <div className=\"questionDiv\">\n                            <label className=\"questionLabel\">Escribe tu pregunta y te respondemos con un corto video</label>\n                            <input type=\"text\" placeholder=\"ej. ¿Tienen sofás con cojineria de cuero?\" className=\"questionInput\" />\n                            <button className=\"sentQuestion\">Enviar</button>\n                            <button className=\"closeQuestion\" onClick={closeQuestion}>Cerrar</button>\n                        </div>\n                    )\n                }\n            </div>\n            {mySession && (\n                <>\n                    <div className=\"input-group input-container\">\n                        {showStatusCall()}\n                    </div>\n                    <div className=\"container-video\">\n                        <div className=\"qb-video\">\n                            <video id=\"localVideo\" className=\"qb-video_source\" autoPlay playsInline></video>\n                        </div>\n                        <div className=\"qb-video\">\n                            <video id=\"mainVideo\" className=\"frames__main_v qb-video_source\" autoPlay playsInline></video>\n                        </div>\n                    </div>\n                    <div className=\"input-group input-container\">\n                        <Button\n                            variant=\"danger\"\n                            className=\"hangout-button\"\n                            onClick={() => finishCall()}\n                        >\n                            Terminar llamada\n                        </Button>\n                    </div>\n                </>\n            )}\n        </div>\n    )\n};\n\nexport default StoreForm;\n"]},"metadata":{},"sourceType":"module"}